# Set header include dir
set(EXTERNALS_INCLUDE "${CMAKE_SOURCE_DIR}/Externals/include")
include_directories(${EXTERNALS_INCLUDE})


# Set lib dir
if (TARGET_COMPILER_MSVC)
	set(EXTERNALS_LIB_1 "")
else()
	set(EXTERNALS_LIB_1 "unknown_")
endif()

if (TARGET_ARCH_X64)
	set(EXTERNALS_LIB_2 "x64_")
else()
	set(EXTERNALS_LIB_2 "unknown_")
endif()

set(EXTERNALS_LIB_DEBUG "${CMAKE_SOURCE_DIR}/Externals/lib_${EXTERNALS_LIB_1}${EXTERNALS_LIB_2}Debug")
set(EXTERNALS_LIB_RELEASE "${CMAKE_SOURCE_DIR}/Externals/lib_${EXTERNALS_LIB_1}${EXTERNALS_LIB_2}Release")

if (NOT EXISTS ${EXTERNALS_LIB_DEBUG})
	message("External libraries not found at ${EXTERNALS_LIB_DEBUG}!")
	message(FATAL_ERROR "Please compile external libraries for ${CMAKE_CXX_COMPILER_ID} on ${CMAKE_SYSTEM_PROCESSOR}.")
endif()
if (NOT EXISTS ${EXTERNALS_LIB_RELEASE})
	message("External libraries not found at ${EXTERNALS_LIB_RELEASE}!")
	message(FATAL_ERROR "Please compile external libraries for ${CMAKE_CXX_COMPILER_ID} on ${CMAKE_SYSTEM_PROCESSOR}.")
endif()


# Set binary output directories
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_DEBUG ${CMAKE_BINARY_DIR}/Bin/Debug)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY_DEBUG ${CMAKE_BINARY_DIR}/Bin/Debug)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_DEBUG ${CMAKE_BINARY_DIR}/Bin/Debug)

set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_RELWITHDEBINFO ${CMAKE_BINARY_DIR}/Bin/RelWithDebInfo)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY_RELWITHDEBINFO ${CMAKE_BINARY_DIR}/Bin/RelWithDebInfo)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELWITHDEBINFO ${CMAKE_BINARY_DIR}/Bin/RelWithDebInfo)

set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_RELEASE ${CMAKE_BINARY_DIR}/Bin/Release)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY_RELEASE ${CMAKE_BINARY_DIR}/Bin/Release)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE ${CMAKE_BINARY_DIR}/Bin/Release)

set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_MINSIZEREL ${CMAKE_BINARY_DIR}/Bin/MinSizeRel)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY_MINSIZEREL ${CMAKE_BINARY_DIR}/Bin/MinSizeRel)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_MINSIZEREL ${CMAKE_BINARY_DIR}/Bin/MinSizeRel)



